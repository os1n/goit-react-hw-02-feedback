{"version":3,"sources":["components/feedbackOptions/feedbackOptions.js","components/Section/Section.js","components/statistics/statistics.js","components/App.js","index.js"],"names":["FeedbackOptions","props","type","onClick","evt","onLeaveFeedback","Section","title","Statistics","good","bad","neutral","total","positivePercentage","App","state","countTotalFeedback","object","Object","values","reduce","a","b","countPositiveFeedbackPercentage","positiveFeedbackPercentage","toFixed","incrementState","value","setState","prevState","this","positivePercent","className","styles","container","options","Component","defaultProps","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"2NAGe,SAASA,EAAgBC,GACtC,OACE,oCACE,4BACEC,KAAK,SACLC,QAAS,SAAAC,GACPH,EAAMI,gBAAgB,UAGvB,QAGH,4BACEH,KAAK,SACLC,QAAS,SAAAC,GACPH,EAAMI,gBAAgB,SAGvB,OAGH,4BACEH,KAAK,SACLC,QAAS,SAAAC,GACPH,EAAMI,gBAAgB,aAGvB,YC1BM,SAASC,EAAQL,GAC9B,OACE,oCACE,6CACA,4BAAKA,EAAMM,OACX,kDACA,kBAACP,EAAD,CACEK,gBAAiBJ,EAAMI,mBCRhB,SAASG,EAAT,GAMX,IALFC,EAKC,EALDA,KACAC,EAIC,EAJDA,IACAC,EAGC,EAHDA,QACAC,EAEC,EAFDA,MACAC,EACC,EADDA,mBAEA,OACE,oCACE,0CACA,qCACQ,8BAAOJ,IAEf,oCACO,8BAAOC,IAEd,wCACW,8BAAOC,IAElB,sCACS,8BAAOC,IAEhB,kDACqB,8BAAOC,EAAP,O,oBCrBNC,E,4MAOnBC,MAAQ,CACNN,KAAM,EACNE,QAAS,EACTD,IAAK,G,EAGPM,mBAAqB,SAAAC,GACnB,OAAOC,OAAOC,OAAOF,GAAQG,QAAO,SAACC,EAAGC,GAAJ,OAAUD,EAAIC,IAAG,I,EAGvDC,gCAAkC,WAChC,IAAIC,GACiB,IAAlB,EAAKT,MAAMN,KACZS,OAAOC,OAAO,EAAKJ,OAAOK,QAAO,SAACC,EAAGC,GAAJ,OAAUD,EAAIC,IAAG,IAClDG,QAAQ,GAEV,OAA2B,IAApB,EAAKV,MAAMN,KAAae,EAA6B,G,EAG9DE,eAAiB,SAAAC,GACf,EAAKC,UAAS,SAAAC,GACZ,OAAO,eAAGF,EAAQE,EAAUF,GAAS,O,uDAI/B,IAAD,EACwBG,KAAKf,MAA5BN,EADD,EACCA,KAAME,EADP,EACOA,QAASD,EADhB,EACgBA,IAEnBE,EAAQkB,KAAKd,mBAAmBc,KAAKf,OACrCgB,EAAkBD,KAAKP,kCAE3B,OACE,oCACE,6BAASS,UAAWC,IAAOC,WACzB,kBAAC5B,EAAD,CACEC,MAAM,0BACN4B,QAAS,CAAC1B,EAAMC,EAAKC,GACrBN,gBAAiByB,KAAKJ,iBAGiB,IAAxCI,KAAKd,mBAAmBc,KAAKf,QAC5B,kBAACP,EAAD,CACEC,KAAMA,EACNE,QAASA,EACTD,IAAKA,EACLE,MAAOA,EACPC,mBAAoBkB,U,GArDDK,aAAZtB,EACZuB,aAAe,CACpB5B,KAAM,EACNE,QAAS,EACTD,IAAK,GCJT4B,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,U","file":"static/js/main.2f1ac706.chunk.js","sourcesContent":["import React from 'react';\nimport propTypes from 'prop-types';\n\nexport default function FeedbackOptions(props) {\n  return (\n    <>\n      <button\n        type=\"button\"\n        onClick={evt => {\n          props.onLeaveFeedback('good');\n        }}\n      >\n        {'Good'}\n      </button>\n\n      <button\n        type=\"button\"\n        onClick={evt => {\n          props.onLeaveFeedback('bad');\n        }}\n      >\n        {'Bad'}\n      </button>\n\n      <button\n        type=\"button\"\n        onClick={evt => {\n          props.onLeaveFeedback('neutral');\n        }}\n      >\n        {'neutral'}\n      </button>\n    </>\n  );\n}\n\nFeedbackOptions.propTypes = {\n  onLeaveFeedback: propTypes.func,\n};\n","import React from 'react';\nimport FeedbackOptions from '../feedbackOptions/feedbackOptions';\nimport PropTypes from 'prop-types';\n\nexport default function Section(props) {\n  return (\n    <>\n      <h1>Section Stats</h1>\n      <h2>{props.title}</h2>\n      <h2> Feedback options </h2>\n      <FeedbackOptions\n        onLeaveFeedback={props.onLeaveFeedback}\n      ></FeedbackOptions>\n    </>\n  );\n}\n\nSection.propTypes = {\n  title: PropTypes.string,\n  options: PropTypes.array,\n};\n","import React from 'react';\nimport propTypes from 'prop-types';\n\nexport default function Statistics({\n  good,\n  bad,\n  neutral,\n  total,\n  positivePercentage,\n}) {\n  return (\n    <>\n      <h2>Statistics</h2>\n      <h3>\n        Good: <span>{good}</span>\n      </h3>\n      <h3>\n        Bad: <span>{bad}</span>\n      </h3>\n      <h3>\n        Neutral: <span>{neutral}</span>\n      </h3>\n      <h3>\n        Total: <span>{total}</span>\n      </h3>\n      <h3>\n        Positive Feedback: <span>{positivePercentage}%</span>\n      </h3>\n    </>\n  );\n}\n\nStatistics.propTypes = {\n  good: propTypes.number,\n  bad: propTypes.number,\n  neutral: propTypes.number,\n  total: propTypes.number,\n  positivePercentage: propTypes.string,\n};\n","import React, { Component } from 'react';\nimport Section from './Section/Section';\nimport Statistics from './statistics/statistics';\nimport styles from './App.moodule.css';\n\nexport default class App extends Component {\n  static defaultProps = {\n    good: 0,\n    neutral: 0,\n    bad: 0,\n  };\n\n  state = {\n    good: 0,\n    neutral: 0,\n    bad: 0,\n  };\n\n  countTotalFeedback = object => {\n    return Object.values(object).reduce((a, b) => a + b, 0);\n  };\n\n  countPositiveFeedbackPercentage = () => {\n    let positiveFeedbackPercentage = (\n      (this.state.good * 100) /\n      Object.values(this.state).reduce((a, b) => a + b, 0)\n    ).toFixed(2);\n\n    return this.state.good !== 0 ? positiveFeedbackPercentage : 0;\n  };\n\n  incrementState = value => {\n    this.setState(prevState => {\n      return { [value]: prevState[value] + 1 };\n    });\n  };\n\n  render() {\n    const { good, neutral, bad } = this.state;\n\n    let total = this.countTotalFeedback(this.state);\n    let positivePercent = this.countPositiveFeedbackPercentage();\n\n    return (\n      <>\n        <section className={styles.container}>\n          <Section\n            title=\"Please leave feedback!!\"\n            options={[good, bad, neutral]}\n            onLeaveFeedback={this.incrementState}\n          />\n\n          {this.countTotalFeedback(this.state) !== 0 && (\n            <Statistics\n              good={good}\n              neutral={neutral}\n              bad={bad}\n              total={total}\n              positivePercentage={positivePercent}\n            />\n          )}\n        </section>\n      </>\n    );\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}